// Generated by CoffeeScript 1.6.3
var CustomInstructionActionTip, CustomInstructionBranchTip,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

CustomInstructionActionTip = (function(_super) {
  __extends(CustomInstructionActionTip, _super);

  function CustomInstructionActionTip(instruction, next) {
    this.instruction = instruction;
    CustomInstructionActionTip.__super__.constructor.call(this, next);
  }

  CustomInstructionActionTip.prototype.action = function() {
    return this.instruction.execute();
  };

  CustomInstructionActionTip.prototype.isAsynchronous = function() {
    return this.instruction.isAsynchronous;
  };

  CustomInstructionActionTip.prototype.mkDescription = function() {
    return this.instruction.mkDescription();
  };

  CustomInstructionActionTip.prototype.getIcon = function() {
    return this.instruction.getIcon();
  };

  CustomInstructionActionTip.prototype.clone = function() {
    return this.copy(new CustomInstructionActionTip(this.instruction.clone(), this.getNext()));
  };

  CustomInstructionActionTip.prototype.serialize = function() {
    var serialized;
    serialized = CustomInstructionActionTip.__super__.serialize.apply(this, arguments);
    serialized["instruction"] = this.instruction.serialize();
    return serialized;
  };

  CustomInstructionActionTip.prototype.deserialize = function(serializedVal) {
    CustomInstructionActionTip.__super__.deserialize.call(this, serializedVal);
    return this.instruction.deserialize(serializedVal.instruction);
  };

  return CustomInstructionActionTip;

})(ActionTip);

CustomInstructionBranchTip = (function(_super) {
  __extends(CustomInstructionBranchTip, _super);

  function CustomInstructionBranchTip(instruction, conseq, alter) {
    this.instruction = instruction;
    CustomInstructionBranchTip.__super__.constructor.call(this, conseq, alter);
  }

  CustomInstructionBranchTip.prototype.condition = function() {
    return this.instruction.execute();
  };

  CustomInstructionBranchTip.prototype.mkDescription = function() {
    return this.instruction.mkDescription();
  };

  CustomInstructionBranchTip.prototype.isAsynchronous = function() {
    return this.instruction.isAsynchronous;
  };

  CustomInstructionBranchTip.prototype.getIcon = function() {
    return this.instruction.getIcon();
  };

  CustomInstructionBranchTip.prototype.clone = function() {
    return this.copy(new CustomInstructionBranchTip(this.instruction.clone(), this.getConseq, this.getAlter()));
  };

  CustomInstructionBranchTip.prototype.serialize = function() {
    var serialized;
    serialized = CustomInstructionBranchTip.__super__.serialize.apply(this, arguments);
    serialized["instruction"] = this.instruction.serialize();
    return serialized;
  };

  CustomInstructionBranchTip.prototype.deserialize = function(serializedVal) {
    CustomInstructionBranchTip.__super__.deserialize.call(this, serializedVal);
    return this.instruction.deserialize(serializedVal.instruction);
  };

  return CustomInstructionBranchTip;

})(BranchTip);

octagram.CustomInstructionActionTip = CustomInstructionActionTip;

octagram.CustomInstructionBranchTip = CustomInstructionBranchTip;
