// Generated by CoffeeScript 1.6.2
var Bullet, BulletItem, DroidBullet, EnemyBullet, Item,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Bullet = (function(_super) {
  __extends(Bullet, _super);

  Bullet.MAX_FRAME = 15;

  function Bullet(x, y, w, h) {
    this.onDestroy = __bind(this.onDestroy, this);    Bullet.__super__.constructor.call(this, w, h);
    this.rotate(90);
  }

  Bullet.prototype.shot = function(x, y, direct) {
    var point, rotate;

    this.x = x;
    this.y = y;
    this.direct = direct != null ? direct : Direct.RIGHT;
    this.offsetX = this.x;
    this.offsetY = this.y;
    this.dstPoint = new Point(0, 0);
    this.animated = true;
    if (this._rorateDeg != null) {
      this.rotate(-this._rorateDeg);
    }
    rotate = 0;
    if ((this.direct & Direct.LEFT) !== 0) {
      rotate += 180;
    }
    if ((this.direct & Direct.UP) !== 0) {
      if ((this.direct & Direct.LEFT) !== 0) {
        rotate += 60;
      } else {
        rotate -= 60;
      }
    } else if ((this.direct & Direct.DOWN) !== 0) {
      if ((this.direct & Direct.LEFT) !== 0) {
        rotate -= 60;
      } else {
        rotate += 60;
      }
    }
    this.rotate(rotate);
    this._rorateDeg = rotate;
    point = Util.toCartesianCoordinates(70 * 2, Util.toRad(rotate));
    return this.tl.moveBy(toi(point.x), toi(point.y), Bullet.MAX_FRAME).then(function() {
      return this.onDestroy();
    });
  };

  Bullet.prototype.hit = function(robot) {
    var explosion;

    explosion = new Explosion(robot.x, robot.y);
    this.parentNode.addChild(explosion);
    this.onDestroy();
    return robot.damege();
  };

  Bullet.prototype.onDestroy = function() {
    if (this.animated) {
      this.animated = false;
      return this.parentNode.removeChild(this);
    }
  };

  return Bullet;

})(Sprite);

DroidBullet = (function(_super) {
  __extends(DroidBullet, _super);

  DroidBullet.WIDTH = 64;

  DroidBullet.HEIGHT = 64;

  function DroidBullet(x, y) {
    DroidBullet.__super__.constructor.call(this, x, y, DroidBullet.WIDTH, DroidBullet.HEIGHT);
    this.image = Game.instance.assets[R.BULLET.DROID];
  }

  return DroidBullet;

})(Bullet);

EnemyBullet = (function(_super) {
  __extends(EnemyBullet, _super);

  EnemyBullet.WIDTH = 64;

  EnemyBullet.HEIGHT = 64;

  function EnemyBullet(x, y) {
    EnemyBullet.__super__.constructor.call(this, x, y, EnemyBullet.WIDTH, EnemyBullet.HEIGHT);
    this.image = Game.instance.assets[R.BULLET.ENEMY];
  }

  return EnemyBullet;

})(Bullet);

Item = (function(_super) {
  __extends(Item, _super);

  function Item(w, h) {
    this.onComplete = __bind(this.onComplete, this);    Item.__super__.constructor.call(this, w, h);
    this.animated = true;
  }

  Item.prototype.onComplete = function() {
    this.animated = false;
    return this.parentNode.removeChild(this);
  };

  return Item;

})(Sprite);

BulletItem = (function(_super) {
  __extends(BulletItem, _super);

  BulletItem.SIZE = 64;

  BulletItem.FRAME = 20;

  function BulletItem(x, y) {
    BulletItem.__super__.constructor.call(this, BulletItem.SIZE, BulletItem.SIZE);
    this.x = x;
    this.y = y - 8;
    this.image = Game.instance.assets[R.ITEM.BULLET];
    this.tl.fadeOut(BulletItem.FRAME).and().moveBy(0, -48, BulletItem.FRAME).then(function() {
      return this.onComplete();
    });
  }

  return BulletItem;

})(Item);
