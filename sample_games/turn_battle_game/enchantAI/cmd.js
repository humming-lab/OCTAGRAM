// Generated by CoffeeScript 1.6.2
var Command, CommandIterator, CommandQueue;

Command = (function() {
  function Command(instruction, robot, args) {
    this.instruction = instruction;
    this.robot = robot;
    this.args = args != null ? args : null;
  }

  Command.prototype["eval"] = function() {
    return this.instruction.func.apply(this.robot, this.args);
  };

  return Command;

})();

CommandQueue = (function() {
  function CommandQueue(collection) {
    this.collection = collection != null ? collection : [];
  }

  CommandQueue.prototype.enqueue = function(item) {
    return this.collection.push(item);
  };

  CommandQueue.prototype.dequeue = function() {
    return this.collection.shift();
  };

  CommandQueue.prototype.empty = function() {
    return this.collection.length === 0;
  };

  return CommandQueue;

})();

CommandIterator = (function() {
  function CommandIterator(collection) {
    this.collection = collection;
    this.i = 0;
  }

  CommandIterator.prototype.next = function() {
    if (this.hasNext() === true) {
      return this.collection[this.i++];
    }
  };

  CommandIterator.prototype.hasNext = function() {
    return this.collection.length > this.i;
  };

  return CommandIterator;

})();
