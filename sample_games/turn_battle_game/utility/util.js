// Generated by CoffeeScript 1.6.2
var Direct, Point, Stack, Util, toi;

toi = function(i) {
  return parseInt(i);
};

Direct = (function() {
  var bit;

  function Direct() {}

  bit = 1;

  Direct.LEFT = bit << 0;

  Direct.RIGHT = bit << 1;

  Direct.UP = bit << 2;

  Direct.DOWN = bit << 3;

  return Direct;

})();

Point = (function() {
  function Point(x, y) {
    this.x = x;
    this.y = y;
  }

  Point.prototype.length = function() {
    return Math.sqrt(this.x * this.x + this.y * this.y);
  };

  return Point;

})();

Util = (function() {
  function Util() {}

  Util.includedAngle = function(vec1, vec2) {
    var dot, len1, len2, tmp;

    tmp = 1;
    if ((vec1.y * vec2.x - vec1.x * vec2.y) < 0) {
      tmp *= -1;
    }
    dot = vec1.x * vec2.x + vec1.y * vec2.y;
    len1 = Math.sqrt(vec1.x * vec1.x + vec1.y * vec1.y);
    len2 = Math.sqrt(vec2.x * vec2.x + vec2.y * vec2.y);
    return tmp * Math.acos(dot / (len1 * len2));
  };

  Util.toDeg = function(r) {
    return r * 180.0 / (Math.atan(1.0) * 4.0);
  };

  Util.toRad = function(deg) {
    return deg * Math.PI / 180;
  };

  Util.toCartesianCoordinates = function(r, rad) {
    return new Point(r * Math.cos(rad), r * Math.sin(rad));
  };

  return Util;

})();

Stack = (function() {
  function Stack(maxSize) {
    this.maxSize = maxSize;
    this.s = [];
  }

  Stack.prototype.push = function(item) {
    if (this.maxSize >= this.s.length) {
      return this.s.push(item);
    }
  };

  Stack.prototype.pop = function() {
    if (this.s.length > 0) {
      return this.s.pop();
    }
  };

  Stack.prototype.size = function() {
    return this.s.length;
  };

  return Stack;

})();
