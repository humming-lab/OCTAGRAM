// Generated by CoffeeScript 1.6.3
var Background, Button, NextButton, R, ViewGroup, ViewSprite,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

R = Config.R;

ViewGroup = (function(_super) {
  __extends(ViewGroup, _super);

  function ViewGroup(x, y) {
    ViewGroup.__super__.constructor.call(this, x, y);
    this._childs = [];
  }

  ViewGroup.prototype.addView = function(view) {
    this._childs.push(view);
    return this.addChild(view);
  };

  ViewGroup.prototype.initEvent = function(world) {
    var view, _i, _len, _ref, _results;
    _ref = this._childs;
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      view = _ref[_i];
      _results.push(view.initEvent(world));
    }
    return _results;
  };

  return ViewGroup;

})(Group);

ViewSprite = (function(_super) {
  __extends(ViewSprite, _super);

  function ViewSprite(x, y) {
    ViewSprite.__super__.constructor.call(this, x, y);
  }

  ViewSprite.prototype.initEvent = function(world) {};

  return ViewSprite;

})(Sprite);

Background = (function(_super) {
  __extends(Background, _super);

  Background.SIZE = 640;

  function Background(x, y) {
    Background.__super__.constructor.call(this, Background.SIZE, Background.SIZE);
    this.image = Game.instance.assets[R.BACKGROUND_IMAGE.SPACE];
    this.x = x;
    this.y = y;
  }

  return Background;

})(ViewSprite);

Button = (function(_super) {
  __extends(Button, _super);

  Button.WIDTH = 120;

  Button.HEIGHT = 50;

  function Button(x, y) {
    Button.__super__.constructor.call(this, Button.WIDTH, Button.HEIGHT);
    this.x = x;
    this.y = y;
  }

  Button.prototype.setOnClickEventListener = function(listener) {
    return this.on_click_event = listener;
  };

  Button.prototype.ontouchstart = function() {
    if (this.on_click_event != null) {
      this.on_click_event();
    }
    return this.frame = 1;
  };

  Button.prototype.ontouchend = function() {
    return this.frame = 0;
  };

  return Button;

})(ViewSprite);

NextButton = (function(_super) {
  __extends(NextButton, _super);

  function NextButton(x, y) {
    NextButton.__super__.constructor.call(this, x, y);
    this.image = Game.instance.assets[R.BACKGROUND_IMAGE.NEXT_BUTTON];
  }

  return NextButton;

})(Button);
