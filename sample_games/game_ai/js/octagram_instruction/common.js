// Generated by CoffeeScript 1.6.3
var InstrCommon, TipInfo;

InstrCommon = (function() {
  var RobotDirect, directs, frame;

  function InstrCommon() {}

  RobotDirect = (function() {
    function RobotDirect(value, frame) {
      this.value = value;
      this.frame = frame;
    }

    return RobotDirect;

  })();

  directs = [Direct.RIGHT, Direct.RIGHT | Direct.DOWN, Direct.LEFT | Direct.DOWN, Direct.LEFT, Direct.LEFT | Direct.UP, Direct.RIGHT | Direct.UP];

  frame = [0, 5, 7, 2, 6, 4];

  InstrCommon.getRobotDirect = function(i) {
    return new RobotDirect(directs[i], frame[i]);
  };

  InstrCommon.getDirectSize = function() {
    return directs.length;
  };

  InstrCommon.getDirectIndex = function(direct) {
    return directs.indexOf(direct);
  };

  InstrCommon.getFrame = function(direct) {
    var i, _i, _ref;
    for (i = _i = 0, _ref = directs.length; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
      if (directs[i] === direct) {
        return frame[i];
      }
    }
    return 0;
  };

  return InstrCommon;

})();

TipInfo = (function() {
  function TipInfo(description) {
    this.description = description;
    this.params = {};
    this.labels = {};
  }

  TipInfo.prototype.addParameter = function(id, column, labels, value) {
    var param;
    param = {
      column: column,
      labels: labels
    };
    this.labels[id] = param.labels[value];
    return this.params[id] = param;
  };

  TipInfo.prototype.changeLabel = function(id, value) {
    return this.labels[id] = this.params[id].labels[value];
  };

  TipInfo.prototype.getLabel = function(id) {
    return this.labels[id];
  };

  TipInfo.prototype.getDescription = function() {
    var k, v, values;
    values = (function() {
      var _ref, _results;
      _ref = this.labels;
      _results = [];
      for (k in _ref) {
        v = _ref[k];
        _results.push(v);
      }
      return _results;
    }).call(this);
    return this.description(values);
  };

  return TipInfo;

})();
