// Generated by CoffeeScript 1.6.3
var LeaveInstruction,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

LeaveInstruction = (function(_super) {
  __extends(LeaveInstruction, _super);

  /*
    Leave Instruction
  */


  function LeaveInstruction(robot, enemy) {
    this.robot = robot;
    this.enemy = enemy;
    LeaveInstruction.__super__.constructor.apply(this, arguments);
    this.setAsynchronous(true);
    this.icon = new Icon(Game.instance.assets[R.TIP.ARROW], 32, 32);
  }

  LeaveInstruction.prototype.action = function() {
    var ret,
      _this = this;
    ret = this.robot.leave(this.enemy, function() {
      return _this.onComplete();
    });
    return this.setAsynchronous(ret !== false);
  };

  LeaveInstruction.prototype.clone = function() {
    var obj;
    obj = this.copy(new LeaveInstruction(this.robot, this.enemy));
    return obj;
  };

  LeaveInstruction.prototype.mkDescription = function() {
    return "敵から離れるように移動します。<br>(消費エネルギー " + Config.Energy.LEAVE + " 消費フレーム " + Config.Frame.ROBOT_MOVE + ")";
  };

  LeaveInstruction.prototype.getIcon = function() {
    this.icon.frame = 0;
    return this.icon;
  };

  return LeaveInstruction;

})(ActionInstruction);
