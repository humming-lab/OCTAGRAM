// Generated by CoffeeScript 1.6.3
var Player, R, RobotPlayer,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

R = Config.R;

Player = (function(_super) {
  __extends(Player, _super);

  function Player(width, height, _map) {
    this._map = _map;
    Player.__super__.constructor.call(this, width, height);
    Object.defineProperties(this, this.properties);
    this.index = new Point();
    this.position = this._map.startElement;
    this.direction = Direction.UP;
  }

  Player.prototype.properties = {
    position: {
      get: function() {
        return null;
      },
      set: function(e) {
        var point;
        point = this._map.toPoint(e);
        this.x = point.x;
        this.y = point.y;
        this.index.x = e.index.x;
        return this.index.y = e.index.y;
      }
    },
    direction: {
      get: function() {
        return this._direction;
      },
      set: function(direction) {
        return this._direction = direction;
      }
    }
  };

  Player.prototype.move = function() {
    var e, pos;
    pos = this.index.add(this.direction);
    e = this._map.getElement(pos.x, pos.y);
    if (e !== false) {
      this.position = e;
    }
    return this.dispatchEvent(new MazeEvent('move'));
  };

  Player.prototype.turnLeft = function() {
    return this.direction = Direction.prev(this.direction);
  };

  Player.prototype.turnRight = function() {
    return this.direction = Direction.next(this.direction);
  };

  return Player;

})(Sprite);

RobotPlayer = (function(_super) {
  __extends(RobotPlayer, _super);

  RobotPlayer.WIDTH = 16;

  RobotPlayer.HEIGHT = 16;

  function RobotPlayer(map) {
    RobotPlayer.__super__.constructor.call(this, RobotPlayer.WIDTH, RobotPlayer.HEIGHT, map);
    this.image = Game.instance.assets[R.CHAR.CHAR1];
  }

  return RobotPlayer;

})(Player);
