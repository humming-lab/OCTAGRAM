// Generated by CoffeeScript 1.6.3
var GameLog, Tutorial, TutorialPager;

GameLog = (function() {
  function GameLog() {
    var callback, moveToBattlePage, selector;
    selector = new ProgramSelector();
    moveToBattlePage = function(playerId, enemyId) {
      return location.href = getRoot() + "combats/matching/" + playerId + "/" + enemyId;
    };
    callback = function() {
      var name, userId,
        _this = this;
      userId = getUserId();
      if (userId === parseInt($(this).attr('user-id'))) {
        bootbox.alert("自分のプログラムとは対戦できません");
        return;
      }
      name = $(".program-name", this).text();
      return selector.modal({
        title: "" + name + "と対戦するプログラムを選んで下さい",
        buttons: [
          {
            type: "success",
            text: "選択",
            handler: function(data) {
              return moveToBattlePage(data.id, $(_this).attr('program-id'));
            }
          }
        ]
      });
    };
    $('.battle-log-challenger').click(callback);
    $('.battle-log-defender').click(callback);
  }

  return GameLog;

})();

TutorialPager = (function() {
  function TutorialPager(pages) {
    var $modal;
    this.pages = pages;
    $modal = null;
    this.currentPage = 0;
    this.prevBtn = null;
    this.nextBtn = null;
    this.body = null;
    this.title = null;
  }

  TutorialPager.prototype.show = function() {
    var $buttons, $modal, page,
      _this = this;
    page = this.pages[this.currentPage];
    $modal = bootbox.dialog({
      message: page.content,
      title: page.title,
      buttons: {
        danger: {
          label: "前へ",
          className: "btn-danger",
          callback: function() {
            _this.showPrev();
            return false;
          }
        },
        success: {
          label: "次へ",
          className: "btn-success",
          id: 'btn-prev',
          callback: function() {
            _this.showNext();
            return false;
          }
        }
      }
    });
    $buttons = $modal.find('.modal-footer').find('button');
    this.prevBtn = $($buttons[0]);
    this.nextBtn = $($buttons[1]);
    this.body = $modal.find('.bootbox-body');
    this.title = $modal.find('.modal-title');
    $modal.find('.modal-body').height('300px');
    return this.checkButtonVisibility();
  };

  TutorialPager.prototype.checkButtonVisibility = function() {
    this.prevBtn.removeAttr('disabled');
    this.nextBtn.removeAttr('disabled');
    if (this.currentPage === 0) {
      return this.prevBtn.attr('disabled', 'disabled');
    } else if (this.currentPage === this.pages.length - 1) {
      return this.nextBtn.attr('disabled', 'disabled');
    }
  };

  TutorialPager.prototype.showPage = function(page) {
    this.title.text(page.title);
    return this.body.html(page.content);
  };

  TutorialPager.prototype.showNext = function() {
    this.showPage(this.pages[++this.currentPage]);
    return this.checkButtonVisibility();
  };

  TutorialPager.prototype.showPrev = function() {
    this.showPage(this.pages[--this.currentPage]);
    return this.checkButtonVisibility();
  };

  return TutorialPager;

})();

Tutorial = (function() {
  function Tutorial() {
    this.pager = new TutorialPager(this.makePages());
  }

  Tutorial.prototype.show = function() {
    var msg,
      _this = this;
    msg = "<p>CodeCombatは、プログラミング言語OCTAGRAMで作ったゲームAIの強さを競わせるサービスです。</p>" + "<p>最強のAIを作って、ランキング上位を目指そう！</p>" + "<p>まずは、チュートリアルを見てみましょう。</p>";
    return bootbox.dialog({
      message: msg,
      title: "CodeCombatへようこそ！",
      buttons: {
        success: {
          label: "チュートリアルを見る",
          className: "btn-success",
          callback: function() {
            _this.pager.show();
            return _this.disableTutorial();
          }
        },
        danger: {
          label: "今後表示しない",
          className: "btn-danger",
          callback: function() {
            return _this.disableTutorial();
          }
        }
      }
    });
  };

  Tutorial.prototype.disableTutorial = function() {
    return $.post(getRequestURL('users', 'disable_tutorial'), {
      id: getUserId()
    });
  };

  Tutorial.prototype.makePages = function() {
    var gameRuleLink, page1, page2, page3, page4, page5, page6, tutorialLink;
    page1 = {
      title: 'チュートリアルへようこそ！',
      content: '<p>ここでは、Code Combatの使い方の基本学びます。</p>'
    };
    page2 = {
      title: 'プログラムの作り方',
      content: '<p>Code Combatでは、作成したゲームAI同士を競わせることによって、ランキング上位を目指します。</p>' + '<img src="' + getRoot() + 'app/webroot/img/top_icon_programming.png" width=80 height=80 class="tutorial-icon"/>' + '<p>プログラムは、画面上部のプログラミングアイコンをクリックすることにより作成できます。</p>'
    };
    page3 = {
      title: '対戦の仕方',
      content: '<img src="' + getRoot() + 'app/webroot/img/top_icon_vs.png" width=80 height=80 class="tutorial-icon"/>' + '<p>作成したプログラムを、他ユーザと対戦させるには、画面上部の対戦アイコンをクリックします。</p>' + '<p>新着順で他ユーザの作成したプログラムが表示されるので、好きなプログラムを選んで対戦しましょう。</p>'
    };
    page4 = {
      title: 'ランキング',
      content: '<p>ユーザ同士の対戦を行うと、結果に応じてレートが変動します。</p>' + '<p>レートはプログラムの強さを表しており、レートが高い程強いプログラムとなります。</p>' + '<p>ランキングでは、レートの高いプログラムが表示され、ランキング上のプログラムと自由に戦うことができます。</p>' + '<img src="' + getRoot() + 'app/webroot/img/top_icon_ranking.png" width=80 height=80 class="tutorial-icon"/>' + '<p>ランキングは、画面上部のランキングアイコンをクリックすることにより見ることができます。</p>'
    };
    page5 = {
      title: '対戦履歴',
      content: '<p>ユーザ同士の対戦履歴が画面下部に表示されます。</p>' + '<p>ここからも、プログラムをクリックすることによって対戦を行うことができます。</p>'
    };
    page6 = {
      title: 'マイページ',
      content: '<p>ナビゲーションバーの「Profile」をクリックすることにより、自分のマイページへ飛ぶことができます。</p>' + '<p>ここでは、自分の名前を変更したり、プログラムのレートやスコアの変動などの統計情報を見ることができます。</p>'
    };
    tutorialLink = $('#tutorial-link').attr('href');
    gameRuleLink = $('#gamerule-link').attr('href');
    page6 = {
      title: 'ドキュメント',
      content: '<p>ナビゲーションバーの「Document」から、プログラムの組み方のチュートリアルやゲームルールをなどを確認することができます。</p>' + '<p>Code Combatのチュートリアルは以上です。頑張って最強のAIを作りましょう！</p>' + '<p>このチュートリアルは、ナビゲーションバーの「Tutorial」をクリックすることで、いつでも確認できます。</p>' + '<div class="tutorial-btns">' + '<div class="tutorial-btns-container">' + '<div class="learn-program-btn"> <a target="_blank" href="' + tutorialLink + '" class="btn btn-success btn-lg">' + 'プログラムの組み方を学ぶ' + '</a></div>' + '<div class="learn-game-btn"> <a target="_blank" href="' + gameRuleLink + '" class="btn btn-primary btn-lg">' + 'ゲームのルールを学ぶ' + '</a></div>' + '</div>' + '</div>'
    };
    return [page1, page2, page3, page4, page5, page6];
  };

  return Tutorial;

})();

$(function() {
  var tutorial;
  new GameLog;
  if (tutorialEnabled) {
    tutorial = new Tutorial();
    return tutorial.show();
  }
});
